{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "BCPL",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#chars"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#literals"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.bcpl",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.bcpl",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "keywords": {
            "patterns": [{
                "name": "keyword.control.bcpl",
                "match": "\\b(?i:break|table|manifest|static|global|get|switchon|case|endcase|into|let|and|if|unless|while|until|test|then|else|be|do|for|to|by|repeat|repeatwhile|repeatuntil|return|valof|resultis|loop|goto|next|match|every|exit)\\b"
            }]
        },
        "strings": {
            "name": "string.quoted.double.bcpl",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.bcpl",
                    "match": "\\*(?:n|c|p|s|b|t|e|\"|'|\\*|x[0-9A-Fa-f]{2}|[0-7]{3}|#g|#u|#[0-9A-Fa-f]{1,4}|##[0-9A-Fa-f]{1,8}|#[0-9]{4}|f[^*]*\\*)"
                }
            ]
        },
        "chars": {
            "name": "string.quoted.single.bcpl",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.bcpl",
                    "match": "\\*(?:n|c|p|s|b|t|e|\"|'|\\*|x[0-9A-Fa-f]{2}|[0-7]{3}|#g|#u|#[0-9A-Fa-f]{1,4}|##[0-9A-Fa-f]{1,8}|#[0-9]{4}|f[^*]*\\*)"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.hexadecimal.bcpl",
                    "match": "#x[0-9A-Fa-f]+"
                },
                {
                    "name": "constant.numeric.binary.bcpl",
                    "match": "#b[01]+"
                },
                {
                    "name": "constant.numeric.decimal.bcpl",
                    "match": "\\b[0-9]+\\b"
                }
            ]
        },
        "literals": {
            "patterns": [
                {
                    "name": "constant.language.bcpl",
                    "match": "\\b(?i:true|false|bitsperbcplword)\\b"
                }
            ]
        },
        "operators": {
            "patterns":[
                {
                    "name": "keyword.operator.bcpl",
                    "match": "\\b(?i:vec|flt|slct|not|mod|abs|eqv|xor)\\b"
                }
            ]
        }
    },
    "scopeName": "source.bcpl"
}